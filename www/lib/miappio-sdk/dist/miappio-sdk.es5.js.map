{"version":3,"file":"miappio-sdk.es5.js","sources":["ts/src/miappio-sdk.ts","ts/src/index.ts","ts/src/sdk/miapp.module.ts","ts/src/sdk/angular.service.ts","ts/src/sdk/internal.service.ts","ts/src/session/session.ts","ts/src/connection/connection.ts","ts/src/connection/client.ts","ts/src/connection/ajax.ts","ts/src/connection/xhrpromise.ts","ts/src/tools/xor.ts","ts/src/tools/storage.ts","ts/src/tools/base64.ts","ts/src/version/index.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MiappModule,MiappService,LoggerService} from './index';\n","// export * from './tools'\n\nexport {MiappModule,MiappService,LoggerService} from './sdk/index.angular';\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MiappService} from './angular.service';\n/**\n * `NgModule` which provides associated services.\n * \n * ...\n * \n * \\@stable\n */\nexport class MiappModule {\nconstructor() {\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    declarations: [],\n\n    exports: [],\n\n    providers: [MiappService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MiappModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMiappModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMiappModule.ctorParameters;\n}\n\n\n\n/**\n * todo doc on module\n * module MiappModule\n *\n * exemple\n *      // ... after install :\n *      // $ npm install miappio-sdk\n *      // then init your app.js & use it in your services\n *\n * <script src=\"https://gist.github.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46.js\"></script>\n *\n * <script src=\"https://gist.github.com/mlefree/ad64f7f6a345856f6bf45fd59ca8db46.js\"></script>\n */\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {LoggerInterface, ModuleServiceInterface, ModuleServiceInitOptionsInterface, ModuleServiceLoginOptionsInterface} from './interfaces';\nimport {InternalService} from './internal.service';\n/**\n * Angular2+ MiappService\n * \\@class MiappService\n * @see ModuleServiceInterface\n * \n */\nexport class MiappService implements ModuleServiceInterface {\nprivate logger: LoggerInterface;\nprivate miappService: any = null;\nprivate promise: any = null;\nconstructor() {\n        this.logger = new LoggerService();\n        this.promise = Promise;\n        this.miappService = null;\n        // let pouchdbRequired = PouchDB;\n        // pouchdbRequired.error();\n    };\n/**\n * @param {?} miappId\n * @param {?=} options\n * @return {?}\n */\npublic init(miappId, options?: ModuleServiceInitOptionsInterface): Promise<boolean> {\n        if (!this.miappService) {\n            this.miappService = new InternalService(this.logger, this.promise);\n        }\n        /*\n        if (options && options.forcedEndpoint) {\n            this.miappService.setAuthEndpoint(options.forcedEndpoint);\n        }\n        if (options && options.forcedDBEndpoint) {\n            this.miappService.setDBEndpoint(options.forcedDBEndpoint);\n        }*/\n        return this.miappService.miappInit(miappId, options);\n    };\n/**\n * @param {?} login\n * @param {?} password\n * @return {?}\n */\npublic login(login, password): Promise<any> {\n        if (!this.miappService) {\n            return this.promise.reject('miapp.sdk.angular2.login : not initialized.');\n        }\n        return this.miappService.miappLogin(login, password);\n    };\n/**\n * @param {?=} options\n * @return {?}\n */\npublic loginAsDemo(options?: ModuleServiceLoginOptionsInterface): Promise<any> {\n        if (!this.miappService) {\n            return this.promise.reject('miapp.sdk.angular2.loginAsDemo : not initialized.');\n        }\n        return this.miappService.miappLoginInDemoMode(options);\n    };\n/**\n * @return {?}\n */\npublic isLoggedIn(): boolean {\n        if (!this.miappService) {\n            return this.promise.reject('miapp.sdk.angular2.isLoggedIn : not initialized.');\n        }\n        return this.miappService.miappIsLogin();\n    };\n/**\n * @return {?}\n */\npublic getRoles(): Array<string> {\n        if (!this.miappService) {\n            return [];\n        }\n        return this.miappService.miappRoles();\n    };\n/**\n * @return {?}\n */\npublic getEndpoints(): Array<string> {\n        if (!this.miappService) {\n            return [];\n        }\n        return this.miappService.getEndpoints();\n    };\n/**\n * @return {?}\n */\npublic logout(): Promise<void> {\n        if (!this.miappService) {\n            return this.promise.reject('miapp.sdk.angular2.logout : not initialized.');\n        }\n        return this.miappService.miappLogout();\n    };\n/**\n * \n * Synchronize DB\n * \\@memberof miapp.angularService\n * \n * \\@example \n *  let initDb = function() {\n *     this.miappService.put('my first row');\n *  };\n *  this.miappService.sync(initDb)\n *  .then(user => ...)\n *  .catch(err => ...)\n * \n * @param {?=} fnInitFirstData  a function with db as input and that return promise: call if DB is empty\n * @return {?}\n */\npublic sync(fnInitFirstData?): Promise<any> {\n        if (!this.miappService) {\n            return this.promise.reject('miapp.sdk.angular2.sync : not initialized.');\n        }\n        return this.miappService.miappSync(fnInitFirstData, this);\n    };\n/**\n * Store data in your session\n * \n * @param {?} data\n * @return {?}\n */\npublic put(data: any): Promise<any> {\n        if (!this.miappService) {\n            return this.promise.reject('miapp.sdk.angular2.put : not initialized.');\n        }\n        return this.miappService.miappPutInDb(data);\n    };\n/**\n * Find object Id and remove it from your session\n * \n * @param {?} id\n * @return {?}\n */\npublic remove(id: string): Promise<any> {\n        if (!this.miappService) {\n            return this.promise.reject('miapp.sdk.angular2.remove : not initialized.');\n        }\n        return this.miappService.miappRemoveInDb(id);\n    };\n/**\n * Find\n * @param {?} id\n * @return {?}\n */\npublic find(id: string): Promise<any> {\n        if (!this.miappService) {\n            return this.promise.reject('miapp.sdk.angular2.find : not initialized.');\n        }\n        return this.miappService.miappFindInDb(id);\n    };\n/**\n * @return {?}\n */\npublic findAll(): Promise<any> {\n        if (!this.miappService) {\n            return this.promise.reject('miapp.sdk.angular2.findAll : not initialized.');\n        }\n        return this.miappService.miappFindAllInDb();\n    };\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MiappService_tsickle_Closure_declarations() {\n/** @type {?} */\nMiappService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMiappService.ctorParameters;\n/** @type {?} */\nMiappService.prototype.logger;\n/** @type {?} */\nMiappService.prototype.miappService;\n/** @type {?} */\nMiappService.prototype.promise;\n}\n\nexport class LoggerService implements LoggerInterface {\n/**\n * @param {?} message\n * @return {?}\n */\nlog(message: string) {\n        // console.log(message);\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nerror(message: string) {\n        console.error(message);\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nwarn(message: string) {\n        console.warn(message);\n    }\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// import PouchDB from 'pouchdb';\n// import * as PouchDB from 'pouchdb/dist/pouchdb.js';\n// import PouchDB from 'pouchdb/dist/pouchdb.js';\n\nimport * as version from '../version';\nimport * as tools from '../tools';\nimport * as connection from '../connection';\nimport * as session from '../session';\nimport {LoggerInterface, ModuleServiceInitOptionsInterface, ModuleServiceLoginOptionsInterface, SdkInterface} from './interfaces';\nimport {SessionCryptoInterface} from '../session/session';\n/**\n * usefull only for miapp.io dev team\n */\nexport class InternalService {\nprivate sdk: SdkInterface;\nprivate logger: LoggerInterface;\nprivate promise: PromiseConstructor;\nprivate storage: tools.LocalStorage;\nprivate session: session.Session;\nprivate connection: connection.Connection;\n/**\n * @param {?} logger\n * @param {?} promise\n */\nconstructor(logger: LoggerInterface, promise: PromiseConstructor) {\n\n        this.sdk = {\n            org: 'miapp.io',\n            version: version.version,\n            prod: false\n        };\n        this.logger = {\n            log: () => {\n            }, error: () => {\n            }, warn: () => {\n            }\n        };\n        if (logger) {\n            this.logger = logger;\n        }\n        this.logger.log('miapp.sdk.service : constructor');\n        if (promise) {\n            this.promise = promise;\n        }\n        this.storage = new tools.LocalStorage(window.localStorage, 'miapp.');\n        this.session = new session.Session();\n        this.connection = new connection.Connection(this.sdk, this.storage);\n    }\n/**\n * Init connection & session\n * Check uri\n * Done each app start\n * \n * @param {?} miappId\n * @param {?=} options Optional settings\n * @return {?}\n */\npublic miappInit(miappId: string, options?: ModuleServiceInitOptionsInterface) {\n\n        const /** @type {?} */ self = this;\n        self.logger.log('miapp.sdk.service.miappInit : ', options);\n        if (!miappId) {\n            self.logger.error('miapp.sdk.service.miappInit : bad init');\n            return self.promise.reject('miapp.sdk.service.miappInit : bad init');\n        }\n\n        self.sdk.prod = options ? !!options.prod : true;\n\n        return new self.promise((resolve, reject) => {\n            self.connection.verifyConnectionStates()\n                .then(() => {\n                    self.connection.miappId = miappId;\n                    self.connection.miappVersion = self.sdk.version;\n                    self.connection.miappCrypto = options ? !!options.crypto : false;\n                    const /** @type {?} */ url = self.connection.getEndpoints({filter: 'theBestOne'})[0];\n                    if (!url && self.sdk.prod) {\n                        self.logger.warn('miapp.sdk.service.miappInit : no endpoint is nowly available, switch to dev mode.');\n                        reject('miapp.sdk.service.miappInit: endpoint connection required');\n                    } else {\n                        self.connection.setClient(new connection.Client(self.connection.miappId, url, self.storage, self.sdk));\n                        resolve();\n                    }\n                })\n                .catch((err) => {\n                    self.logger.error('miapp.sdk.service.miappInit : ', err);\n                    reject('miapp.sdk.service.miappInit: ' + err.toString());\n                });\n        });\n    };\n/**\n * Call it if miappIsLogin() === false\n * Erase all (db & storage)\n * \n * @param {?} login\n * @param {?} password\n * @return {?}\n */\npublic miappLogin(login: string, password: string): Promise<any> {\n        const /** @type {?} */ self = this;\n        self.logger.log('miapp.sdk.service.miappLogin');\n        if (!self.connection.isReady()) {\n            return self.promise.reject('miapp.sdk.service.miappLogin : Did you miapp.sdk.service.miappInit() ?');\n        }\n\n        return new self.promise((resolve, reject) => {\n            self._removeAll()\n                .then(() => {\n                    return self.connection.verifyConnectionStates();\n                })\n                .then(() => {\n                    self._createSession();\n                    return self._loginInternal(login, password);\n                })\n                .then((user) => {\n                    self.connection.setConnection(user);\n                    self.session.sync(self.connection.getUserId())\n                        .then(() => resolve(self.connection.getUser()))\n                        .catch((err) => resolve(self.connection.getUser()));\n                })\n                .catch((err) => {\n                    self.logger.error('miapp.sdk.service.miappLogin error: ', err);\n                    reject(err);\n                });\n        });\n    };\n/**\n *\n * @param {?=} options\n * @return {?}\n */\npublic miappLoginInDemoMode(options?: ModuleServiceLoginOptionsInterface) {\n        const /** @type {?} */ self = this;\n\n        // generate one day tokens if not set\n        if (!options || !options.accessToken) {\n\n            const /** @type {?} */ now = new Date();\n            now.setDate(now.getDate() + 1);\n            const /** @type {?} */ tomorrow = now.getTime();\n            const /** @type {?} */ payload = tools.Base64.encode(JSON.stringify({roles: [], message: 'demo', endpoints: {}, dbs: [], exp: tomorrow}));\n            const /** @type {?} */ jwtSign = tools.Base64.encode(JSON.stringify({}));\n            const /** @type {?} */ token = jwtSign + '.' + payload + '.' + jwtSign;\n            options = {\n                accessToken: token,\n                idToken: token,\n                refreshToken: token,\n            };\n        }\n\n        return new self.promise((resolve, reject) => {\n            self._removeAll()\n                .then(() => {\n                    self._createSession();\n                    self.connection.setConnectionOffline(options);\n                    resolve(self.connection.getUser());\n                })\n                .catch((err) => {\n                    self.logger.error('miapp.sdk.service.miappLogin error: ', err);\n                    reject(err);\n                });\n        });\n    };\n/**\n * @return {?}\n */\npublic miappRoles() {\n        return JSON.parse(this.connection.getIdPayload({roles: []})).roles;\n    };\n/**\n * @return {?}\n */\npublic miappMessage() {\n        return JSON.parse(this.connection.getIdPayload({message: ''})).message;\n    };\n/**\n * @return {?}\n */\npublic miappIsLogin() {\n        return this.connection.isLogin();\n    };\n/**\n *\n * @return {?}\n */\npublic miappLogout(): Promise<void> {\n        const /** @type {?} */ self = this;\n        if (!self.connection.getClient()) {\n            return self._removeAll();\n        }\n\n        return self.connection.getClient().logout()\n            .then(() => {\n                return self._removeAll();\n            })\n            .catch(() => {\n                return self._removeAll();\n            });\n    };\n/**\n * Synchronize DB\n * \n * \n * @param {?=} fnInitFirstData a function with db as input and that return promise: call if DB is empty\n * @param {?=} fnInitFirstData_Arg arg to set to fnInitFirstData()\n * @return {?}\n */\npublic miappSync(fnInitFirstData?, fnInitFirstData_Arg?): Promise<void> {\n        const /** @type {?} */ self = this;\n        self.logger.log('miapp.sdk.service.miappSync');\n        if (!self.connection.isReady()) {\n            return self.promise.reject('miapp.sdk.service.miappSync : DB sync impossible. Did you login ?');\n        }\n\n        const /** @type {?} */ firstSync = (self.session.dbLastSync === null);\n\n        return new self.promise((resolve, reject) => {\n\n            self._createSession();\n            self.session.sync(self.connection.getUserId())\n                .then(() => {\n                    self.logger.log('miapp.sdk.service.miappSync resolved');\n                    return self.session.isEmpty();\n                })\n                .catch((err) => {\n                    self.logger.warn('miapp.sdk.service.miappSync warn: ', err);\n                    return self.session.isEmpty();\n                })\n                .then((isEmpty) => {\n                    self.logger.log('miapp.sdk.service.miappSync isEmpty : ', isEmpty, firstSync);\n                    if (isEmpty && firstSync && fnInitFirstData) {\n                        const /** @type {?} */ ret = fnInitFirstData(fnInitFirstData_Arg);\n                        if (ret && ret['catch'] instanceof Function) {\n                            return ret;\n                        }\n                        if (typeof ret === 'string') {\n                            self.logger.log(ret);\n                        }\n                    }\n                    return self.promise.resolve(); // self.connection.getUser());\n                })\n                .then(() => {\n                    self.logger.log('miapp.sdk.service.miappSync fnInitFirstData resolved');\n                    self.session.dbLastSync = new Date().getTime();\n                    return self.session.info();\n                })\n                .then((result: any) => {\n                    self.session.dbRecordCount = 0;\n                    if (result && result.doc_count) {\n                        self.session.dbRecordCount = result.doc_count;\n                    }\n                    self.logger.log('miapp.sdk.service.miappSync _dbRecordCount : ' + self.session.dbRecordCount);\n\n                    return self.connection.refreshConnection();\n                })\n                .then((code) => {\n                    if (code === 403) {\n                        reject({code: code, msg: 'unauthorized (need login)'});\n                    } else {\n                        resolve(); // self.connection.getUser()\n                    }\n                })\n                .catch((err) => {\n                    const /** @type {?} */ errMessage = 'miapp.sdk.service.miappSync err : ' + err.toString();\n                    // self.logger.error(errMessage);\n                    reject({code: 500, msg: errMessage});\n                })\n            ;\n        });\n    };\n/**\n * @param {?} data\n * @return {?}\n */\npublic miappPutInDb(data: any): Promise<string> {\n        const /** @type {?} */ self = this;\n        self.logger.log('miapp.sdk.service.miappPutInDb :', data);\n\n        if (!self.connection.getClientId() || !self.session.isReady()) {\n            return self.promise.reject('miapp.sdk.service.miappPutInDb : ' +\n                'DB put impossible. Need a user logged in.');\n        }\n\n        let /** @type {?} */ _id: string;\n        if (data && typeof data === 'object' && Object.keys(data).indexOf('_id')) {\n            _id = data._id;\n        }\n        if (!_id) {\n            _id = self._generateObjectUniqueId(self.connection.miappId);\n        }\n        let /** @type {?} */ crypto: SessionCryptoInterface;\n        if (self.connection.miappCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'encrypt'\n            }\n        }\n\n        return self.session.put(\n            data,\n            _id,\n            self.connection.getClientId(),\n            self.sdk.org,\n            self.connection.miappVersion,\n            crypto);\n    };\n/**\n * @param {?} data_id\n * @return {?}\n */\npublic miappRemoveInDb(data_id: string): Promise<void> {\n        const /** @type {?} */ self = this;\n        self.logger.log('miapp.sdk.service.miappRemoveInDb ', data_id);\n\n        if (!self.session.isReady()) {\n            return self.promise.reject('miapp.sdk.service.miappRemoveInDb : DB put impossible. ' +\n                'Need a user logged in.');\n        }\n\n        if (!data_id || typeof data_id !== 'string') {\n            return self.promise.reject('miapp.sdk.service.miappRemoveInDb : DB put impossible. ' +\n                'Need the data._id.');\n        }\n\n        return self.session.remove(data_id);\n    };\n/**\n * @param {?} data_id\n * @return {?}\n */\npublic miappFindInDb(data_id: string): Promise<any> {\n        const /** @type {?} */ self = this;\n        if (!self.connection.getClientId() || !self.session.isReady()) {\n            return self.promise.reject('miapp.sdk.service.miappFindInDb : need a user logged in.');\n        }\n\n        let /** @type {?} */ crypto: SessionCryptoInterface;\n        if (self.connection.miappCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'decrypt'\n            };\n        }\n\n        return self.session.get(data_id, crypto);\n    };\n/**\n * @return {?}\n */\npublic miappFindAllInDb(): Promise<any[]> {\n        const /** @type {?} */ self = this;\n\n        if (!self.connection.getClientId() || !self.session.isReady()) {\n            return self.promise.reject('miapp.sdk.service.miappFindAllInDb : need a user logged in.');\n        }\n\n        let /** @type {?} */ crypto: SessionCryptoInterface;\n        if (self.connection.miappCrypto) {\n            crypto = {\n                obj: self.connection,\n                method: 'decrypt'\n            };\n        }\n\n        return self.session.getAll(crypto);\n    };\n/**\n * Logout then Login\n * \n * @param {?} login\n * @param {?} password\n * @param {?=} updateProperties\n * @return {?}\n */\nprivate _loginInternal(login: string, password: string, updateProperties?: any): Promise<any> {\n        const /** @type {?} */ self = this;\n        self.logger.log('miapp.sdk.service._loginInternal');\n        if (!self.connection.isReady()) {\n            return self.promise.reject('miapp.sdk.service._loginInternal : need init');\n        }\n\n        return new self.promise((resolve, reject) => {\n\n                self.connection.getClient().logout()\n                    .then(msg => {\n                        return self.connection.getClient().login(login, password, updateProperties);\n                    })\n                    .then(loginUser => {\n                        loginUser.email = login;\n                        resolve(loginUser);\n                    })\n                    .catch(err => {\n                        self.logger.error('miapp.sdk.service._loginInternal error : ' + err);\n                        reject(err);\n                    });\n            }\n        );\n    };\n/**\n * @return {?}\n */\nprivate _removeAll(): Promise<void> {\n        this.connection.destroy();\n        return this.session.destroy();\n    };\n/**\n * @return {?}\n */\nprivate _createSession(): void {\n        const /** @type {?} */ dbs = this.connection.getDBs();\n        this.session.create();\n        this.session.setRemote(dbs);\n    };\n/**\n * @param {?=} a\n * @return {?}\n */\nprivate _testPromise(a?): Promise<any> {\n        if (a) {\n            return this.promise.resolve('test promise ok ' + a);\n        }\n        return new this.promise((resolve, reject) => {\n            resolve('test promise ok');\n        });\n    };\nprivate static _srvDataUniqId = 0;\n/**\n * @param {?} appName\n * @param {?=} type\n * @param {?=} name\n * @return {?}\n */\nprivate _generateObjectUniqueId(appName, type?, name?) {\n\n        // return null;\n        const /** @type {?} */ now = new Date();\n        const /** @type {?} */ simpleDate = '' + now.getFullYear() + '' + now.getMonth() + '' + now.getDate()\n            + '' + now.getHours() + '' + now.getMinutes(); // new Date().toISOString();\n        const /** @type {?} */ sequId = ++InternalService._srvDataUniqId;\n        let /** @type {?} */ UId = '';\n        if (appName && appName.charAt(0)) {\n            UId += appName.charAt(0) + '';\n        }\n        if (type && type.length > 3) {\n            UId += type.substring(0, 4);\n        }\n        if (name && name.length > 3) {\n            UId += name.substring(0, 4);\n        }\n        UId += simpleDate + '' + sequId;\n        return UId;\n    }\n\n}\n\nfunction InternalService_tsickle_Closure_declarations() {\n/** @type {?} */\nInternalService._srvDataUniqId;\n/** @type {?} */\nInternalService.prototype.sdk;\n/** @type {?} */\nInternalService.prototype.logger;\n/** @type {?} */\nInternalService.prototype.promise;\n/** @type {?} */\nInternalService.prototype.storage;\n/** @type {?} */\nInternalService.prototype.session;\n/** @type {?} */\nInternalService.prototype.connection;\n}\n\n","// import PouchDB from 'pouchdb';\n// let PouchDB: any;\n\n\nimport PouchDB from 'pouchdb/dist/pouchdb.js';\n\nconst /** @type {?} */ Pouch = window['PouchDB'] || require('pouchdb').default;\n\nexport interface SessionCryptoInterface {\n    obj: Object,\n    method: string\n}\nexport class Session {\npublic dbRecordCount: number;\npublic dbLastSync: number;\nprivate db: PouchDB;\nprivate remoteDb: PouchDB;\nprivate remoteUri: string;\nprivate dbs: Array<string>;\nconstructor() {\n        this.db = null;\n        this.dbRecordCount = 0;\n        this.dbLastSync = null;\n        this.remoteDb = null;\n        this.dbs = [];\n    };\n/**\n * @return {?}\n */\npublic isReady(): boolean {\n        return !!this.db;\n    }\n/**\n * @param {?=} force\n * @return {?}\n */\npublic create(force?: boolean): void {\n\n        if (force || !this.db) {\n            this.dbRecordCount = 0;\n            this.dbLastSync = new Date().getTime();\n            this.db = {};\n            this.db = new Pouch('miapp_db'); // , {adapter: 'websql'} ???\n        }\n    }\n/**\n * @return {?}\n */\npublic destroy(): Promise<void> {\n        const /** @type {?} */ cleanSessionFn = () => {\n            this.dbRecordCount = 0;\n            this.dbLastSync = null;\n        };\n\n        if (!this.db) {\n            cleanSessionFn();\n            return Promise.resolve();\n        }\n\n        if (this.db && !this.db.destroy) {\n            return Promise.reject('miapp.sdk.service._removeSession : DB clean impossible.');\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.destroy((err, info) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    cleanSessionFn();\n                    resolve();\n                }\n            });\n        });\n    };\n/**\n * @param {?} dbs\n * @return {?}\n */\npublic setRemote(dbs: Array<string>): void {\n        this.dbs = dbs;\n    }\n/**\n * @param {?} userId\n * @return {?}\n */\npublic sync(userId: string): Promise<void> {\n\n        if (!this.db) {\n            return Promise.reject({code: 408, msg: 'need db'});\n        }\n        if (!this.dbs || !this.dbs.length) {\n            return Promise.reject({code: 408, msg: 'need db remote'});\n        }\n\n        return new Promise((resolve, reject) => {\n            try {\n\n                if (!this.remoteDb || this.remoteUri !== this.dbs[0]) {\n                    this.remoteUri = this.dbs[0];\n                    this.remoteDb = new Pouch(this.remoteUri);\n                    // todo , {headers: {'Authorization': 'Bearer ' + id_token}});\n                }\n\n                this.db\n                    .sync(this.remoteDb, {\n                        filter: (doc) => {\n                            if (!userId) {\n                                return;\n                            } else if (doc && doc.miappUserId === userId) {\n                                return doc;\n                            }\n                        }\n                    })\n                    .on('complete', (info) => resolve(info))\n                    .on('error', (err) => reject({code: 401, msg: err}))\n                    .on('denied', (err) => reject({code: 403, msg: err}));\n\n            } catch ( /** @type {?} */err) {\n                reject({code: 500, msg: err});\n            }\n        });\n    }\n/**\n * @param {?} data\n * @param {?} _id\n * @param {?} uid\n * @param {?} oid\n * @param {?} ave\n * @param {?=} crypto\n * @return {?}\n */\npublic put(data: any, _id: string, uid: string, oid: string, ave: string, crypto?: SessionCryptoInterface): Promise<string> {\n\n        if (!this.db) {\n            return Promise.reject('need db');\n        }\n\n        if (!data || !_id || !uid || !oid || !ave) {\n            return Promise.reject('need formated data');\n        }\n\n        const /** @type {?} */ dataWithoutIds = JSON.parse(JSON.stringify(data));\n        delete dataWithoutIds._id;\n        delete dataWithoutIds._rev;\n        delete dataWithoutIds.miappUserId;\n        delete dataWithoutIds.miappOrgId;\n        delete dataWithoutIds.miappAppVersion;\n        delete dataWithoutIds.miappData;\n\n        let /** @type {?} */ resultAsString = this.write(this.value(dataWithoutIds));\n        if (crypto) {\n            resultAsString = crypto.obj[crypto.method](resultAsString);\n        }\n        const /** @type {?} */ toStore = {\n            _id: _id,\n            miappUserId: uid,\n            miappOrgId: oid,\n            miappAppVersion: ave,\n            miappData: resultAsString\n        };\n\n        return new Promise((resolve, reject) => {\n            this.db.put(toStore, (err, response) => {\n                if (response && response.ok && response.id && response.rev) {\n                    // data._id = response.id;\n                    // data._rev = response.rev;\n                    this.dbRecordCount++;\n                    resolve(response.id);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n/**\n * @param {?} data_id\n * @return {?}\n */\npublic remove(data_id: string): Promise<void> {\n\n        if (!this.db) {\n            return Promise.reject('need db');\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.get(data_id)\n                .then((doc) => {\n                    doc._deleted = true;\n                    return this.db.put(doc);\n                })\n                .then((result) => {\n                    resolve();\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n/**\n * @param {?} data_id\n * @param {?=} crypto\n * @return {?}\n */\npublic get(data_id: string, crypto?: SessionCryptoInterface): Promise<any> {\n\n        if (!this.db) {\n            return Promise.reject('need db');\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.get(data_id)\n                .then(row => {\n                    if (!!row && !!row.miappData) {\n                        let /** @type {?} */ data = row.miappData;\n                        if (crypto) {\n                            data = crypto.obj[crypto.method](data);\n                        } else {\n                            data = JSON.parse(data);\n                        }\n                        let /** @type {?} */ result = data;\n                        result._id = row._id;\n                        result._rev = row._rev;\n                        result = JSON.parse(JSON.stringify(result));\n                        resolve(result);\n                    } else {\n                        reject('none');\n                    }\n                })\n                .catch(err => reject(err));\n        });\n    }\n/**\n * @param {?=} crypto\n * @return {?}\n */\npublic getAll(crypto?: SessionCryptoInterface): Promise<any[]> {\n\n        if (!this.db) {\n            return Promise.reject('need db');\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db.allDocs({include_docs: true, descending: true})\n                .then(rows => {\n                    const /** @type {?} */ all = [];\n                    rows.rows.forEach(row => {\n                        if (!!row && !!row.doc.miappData && !!row.doc._id) {\n                            let /** @type {?} */ data = row.doc.miappData;\n                            if (crypto) {\n                                data = crypto.obj[crypto.method](data);\n                            } else {\n                                data = JSON.parse(data);\n                            }\n                            let /** @type {?} */ result = data;\n                            result._id = row.doc._id;\n                            result._rev = row.doc._rev;\n                            result = JSON.parse(JSON.stringify(result));\n                            all.push(result);\n                        } else {\n                            // todo reject('row format pb');\n                        }\n                    });\n                    resolve(all);\n                })\n                .catch(err => reject(err));\n        });\n    }\n/**\n * @return {?}\n */\npublic isEmpty(): Promise<boolean> {\n\n        if (!this.db) {\n            return Promise.reject('need db');\n        }\n\n        return new Promise((resolve, reject) => {\n            this.db\n                .allDocs({\n                    // filter: function (doc) {\n                    //    if (!self.connection.user || !self.connection.user._id) return doc;\n                    //    if (doc.miappUserId === self.connection.user._id) return doc;\n                    // }\n                })\n                .then((response) => {\n                    if (!response) {\n                        reject();\n                    } else {\n                        this.dbRecordCount = response.total_rows;\n                        if (response.total_rows && response.total_rows > 0) {\n                            resolve(false);\n                        } else {\n                            resolve(true);\n                        }\n                    }\n                })\n                .catch((err) => reject(err));\n        });\n    }\n/**\n * @return {?}\n */\npublic info(): Promise<any> {\n        if (!this.db) {\n            return Promise.reject('none');\n        }\n        return this.db.info();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate write(item: any): string {\n        let /** @type {?} */ value = 'null';\n        const /** @type {?} */ t = typeof(item);\n        if (t === 'undefined') {\n            value = 'null';\n        } else if (value === null) {\n            value = 'null';\n        } else if (t === 'string') {\n            value = JSON.stringify({string: item})\n        } else if (t === 'number') {\n            value = JSON.stringify({number: item});\n        } else if (t === 'boolean') {\n            value = JSON.stringify({bool: item});\n        } else if (t === 'object') {\n            value = JSON.stringify({json: item});\n        }\n        return value;\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate value(item: any): any {\n\n        const /** @type {?} */ t = typeof(item);\n        if (t !== 'object') {\n            return item;\n        }\n\n        if ('string' in item) {\n            return item.string;\n        } else if ('number' in item) {\n            return item.number.valueOf();\n        } else if ('bool' in item) {\n            return item.bool.valueOf();\n        } else if ('json' in item) {\n            return item.json;\n        } else {\n            return item;\n        }\n    }\n}\n\nfunction Session_tsickle_Closure_declarations() {\n/** @type {?} */\nSession.prototype.dbRecordCount;\n/** @type {?} */\nSession.prototype.dbLastSync;\n/** @type {?} */\nSession.prototype.db;\n/** @type {?} */\nSession.prototype.remoteDb;\n/** @type {?} */\nSession.prototype.remoteUri;\n/** @type {?} */\nSession.prototype.dbs;\n}\n\n","import {LocalStorage} from '../tools/storage';\nimport {Client} from './client';\nimport * as tools from '../tools';\nimport {ModuleServiceLoginOptionsInterface, SdkInterface} from '../sdk/interfaces';\nimport * as connection from './index';\nexport class Connection {\npublic miappId: string;\npublic miappVersion: string;\npublic miappCrypto: boolean;\nprivate _cryptoSalt: string;\nprivate _client: Client;\nprivate _user: any;\npublic accessToken: string;\npublic idToken: string;\npublic refreshToken: string;\npublic states: { [s: string]: { state: boolean, time: number }; };\npublic endpoints: Array<string>;\npublic accessTokenPrevious: string;\n/**\n * @param {?} _sdk\n * @param {?} _storage\n */\nconstructor(private _sdk: SdkInterface,\nprivate _storage: LocalStorage) {\n        this._client = null;\n        this._user = null;\n        this._cryptoSalt = this._storage.get('_cryptoSalt') || null;\n\n        this.accessToken = this._storage.get('accessToken') || null;\n        this.accessTokenPrevious = this._storage.get('accessTokenPrevious') || null;\n        this.idToken = this._storage.get('idToken') || null;\n        this.refreshToken = this._storage.get('refreshToken') || null;\n        this.states = this._storage.get('states') || {};\n        this.endpoints = [];\n    };\n/**\n * @return {?}\n */\nisReady(): boolean {\n        return !!this._client && this._client.isReady();\n    }\n/**\n * @return {?}\n */\ndestroy(): void {\n\n        this._storage.remove('accessToken');\n        this._storage.remove('idToken');\n        this._storage.remove('refreshToken');\n        this._storage.remove('states');\n        this._storage.remove('_cryptoSalt');\n        // Backup - do not remove : this._storage.remove('accessTokenPrevious');\n        if (this.accessToken) {\n            this.accessTokenPrevious = this.accessToken;\n            this._storage.set('accessTokenPrevious', this.accessTokenPrevious);\n        }\n\n        this._user = null;\n        if (this._client) {\n            this._client.setClientId(null);\n        }\n        this.accessToken = null;\n        this.idToken = null;\n        this.refreshToken = null;\n        this.states = {}; // new Map<string, boolean>();\n    }\n/**\n * @param {?} client\n * @return {?}\n */\nsetClient(client: Client): void {\n\n        this._client = client;\n        if (!this._user) {\n            this._user = {};\n        }\n\n        this._user._id = this._client.clientId;\n        this._user._name = JSON.parse(this.getIdPayload({name: ''})).name;\n    }\n/**\n * @param {?} user\n * @return {?}\n */\nsetUser(user: any): void {\n        this._user = user;\n        if (this._user._id) {\n            this._client.setClientId(this._user._id)\n        }\n    }\n/**\n * @return {?}\n */\ngetUser(): any {\n        return this._user;\n    }\n/**\n * @return {?}\n */\ngetUserId(): any {\n        return this._user ? this._user._id : null;\n    }\n/**\n * @return {?}\n */\ngetClient(): Client {\n        return this._client;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nsetCryptoSalt(value: string) {\n        // this.miappCrypto = true;\n        this._cryptoSalt = value;\n        this._storage.set('_cryptoSalt', this._cryptoSalt);\n    }\n/**\n * @param {?} data\n * @return {?}\n */\nencrypt(data: any): string {\n\n        if (typeof data !== 'string') {\n            data = JSON.stringify(data);\n        }\n\n        if (this.miappCrypto && this._cryptoSalt) {\n            // const key = '' + this.miappId + '' + this.getClientId();\n            const /** @type {?} */ key = this._cryptoSalt;\n            return tools.Xor.encrypt(data, key);\n        } else {\n            return data;\n        }\n    }\n/**\n * @param {?} data\n * @return {?}\n */\ndecrypt(data: string): any {\n        let /** @type {?} */ decrypted = data;\n        if (this.miappCrypto && this._cryptoSalt) {\n            // const key = '' + this.miappId + '' + this.getClientId();\n            const /** @type {?} */ key = this._cryptoSalt;\n            decrypted = tools.Xor.decrypt(data, key);\n        }\n        try {\n            decrypted = JSON.parse(decrypted);\n        } catch ( /** @type {?} */err) {\n        }\n\n        return decrypted;\n    }\n/**\n * @return {?}\n */\nisLogin() {\n        let /** @type {?} */ exp = true;\n        try {\n\n            const /** @type {?} */ payload = this.refreshToken.split('.')[1];\n            const /** @type {?} */ decoded = JSON.parse(tools.Base64.decode(payload));\n            exp = ((new Date().getTime() / 1000) >= decoded.exp);\n\n        } catch ( /** @type {?} */e) {\n        }\n        return !exp;\n    };\n/**\n * @return {?}\n */\ngetClientId(): string {\n        if (!this._client) {\n            return null;\n        }\n        return this._client.clientId;\n    }\n/**\n * @param {?=} def\n * @return {?}\n */\ngetIdPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const /** @type {?} */ payload = this.idToken.split('.')[1];\n            if (payload) {\n                return tools.Base64.decode(payload);\n            }\n        } catch ( /** @type {?} */e) {\n        }\n        return def ? def : null;\n    }\n/**\n * @param {?=} def\n * @return {?}\n */\ngetAccessPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const /** @type {?} */ payload = this.accessToken.split('.')[1];\n            if (payload) {\n                return tools.Base64.decode(payload);\n            }\n        } catch ( /** @type {?} */e) {\n        }\n        return def ? def : null;\n    }\n/**\n * @param {?=} def\n * @return {?}\n */\ngetPreviousAccessPayload(def?: any): string {\n        if (def && typeof def !== 'string') {\n            def = JSON.stringify(def);\n        }\n\n        try {\n            const /** @type {?} */ payload = this.accessTokenPrevious.split('.')[1];\n            if (payload) {\n                return tools.Base64.decode(payload);\n            }\n        } catch ( /** @type {?} */e) {\n        }\n        return def ? def : null;\n    }\n/**\n * @return {?}\n */\nrefreshConnection(): Promise<any> {\n        let /** @type {?} */ code = 0;\n\n        // token not expired : ok\n        if (this.accessToken) {\n            const /** @type {?} */ payload = this.accessToken.split('.')[1];\n            const /** @type {?} */ decoded = tools.Base64.decode(payload);\n            // console.log('new Date().getTime() < JSON.parse(decoded).exp :', (new Date().getTime() / 1000), JSON.parse(decoded).exp);\n            if ((new Date().getTime() / 1000) < JSON.parse(decoded).exp) {\n                return Promise.resolve(code);\n            }\n        }\n\n        // remove expired refreshToken\n        if (this.refreshToken) {\n            const /** @type {?} */ payload = this.refreshToken.split('.')[1];\n            const /** @type {?} */ decoded = tools.Base64.decode(payload);\n            if ((new Date().getTime() / 1000) >= JSON.parse(decoded).exp) {\n                this._storage.remove('refreshToken');\n            }\n        }\n\n        // remove expired accessToken & idToken & store it as Previous one\n        this.accessTokenPrevious = this.accessToken;\n        this._storage.set('accessTokenPrevious', this.accessTokenPrevious);\n        this._storage.remove('accessToken');\n        this._storage.remove('idToken');\n        this.accessToken = null;\n        this.idToken = null;\n\n        // refresh authentication\n        return new Promise((resolve, reject) => {\n            this.getClient().reAuthenticate()\n                .then(user => {\n                    this.setConnection(user);\n                    resolve(user);\n                })\n                .catch(err => {\n                    if (err && err.code === 408) {\n                        code = 408; // no api uri or basic timeout : offline\n                    } else if (err && err.code === 404) {\n                        code = 404; // page not found : offline\n                    } else if (err && err.code === 410) {\n                        code = 403; // token expired or device not sure : need relogin\n                    } else if (err) {\n                        code = 403; // forbidden : need relogin\n                    }\n\n                    resolve(code);\n                });\n        });\n    };\n/**\n * @param {?} clientUser\n * @return {?}\n */\nsetConnection(clientUser: any) {\n\n        // only in private storage\n        if (clientUser.access_token) {\n            this.accessToken = clientUser.access_token;\n            this._storage.set('accessToken', this.accessToken);\n            delete clientUser.access_token;\n\n            const /** @type {?} */ salt = JSON.parse(this.getAccessPayload({salt: ''})).salt;\n            if (salt) {\n                this.setCryptoSalt(salt);\n            }\n        }\n        if (clientUser.id_token) {\n            this.idToken = clientUser.id_token;\n            this._storage.set('idToken', this.idToken);\n            delete clientUser.id_token;\n        }\n        if (clientUser.refresh_token) {\n            this.refreshToken = clientUser.refresh_token;\n            this._storage.set('refreshToken', this.refreshToken);\n            delete clientUser.refresh_token;\n        }\n\n        // expose roles, message\n        // clientUser.roles = self.miappRoles();\n        // clientUser.message = self.miappMessage();\n        clientUser.roles = JSON.parse(this.getIdPayload({roles: []})).roles;\n        clientUser.message = JSON.parse(this.getIdPayload({message: ''})).message;\n        this.setUser(clientUser);\n    };\n/**\n * @param {?} options\n * @return {?}\n */\nsetConnectionOffline(options: ModuleServiceLoginOptionsInterface): void {\n\n        // if (this.user) {\n        //     this.user._id = 'demo';\n        // }\n        // if (this.client) {\n        //     this.client.clientId = 'demo';\n        // }\n        // const tmp = tools.Base64.encode(JSON.stringify({}));\n        // this.accessToken = tmp + '.' + tmp + '.' + tmp;\n\n        this.accessToken = options.accessToken;\n        this.idToken = options.idToken;\n        this.refreshToken = options.refreshToken;\n        this.setUser({\n            roles: JSON.parse(this.getIdPayload({roles: []})).roles,\n            message: JSON.parse(this.getIdPayload({message: ''})).message,\n            _id: 'demo'\n        });\n    }\n/**\n * @param {?=} options\n * @return {?}\n */\ngetEndpoints(options?): Array<string> {\n\n        let /** @type {?} */ ea = ['https://miapp.io/api', 'https://miapp-proxy.herokuapp.com/api'];\n        let /** @type {?} */ filteredEa = [];\n\n        if (!this._sdk.prod) {\n            ea = ['http://localhost:5894/api', 'https://miapp-sandbox.herokuapp.com/api'];\n        }\n\n        if (this.accessToken) {\n            const /** @type {?} */ endpoints = JSON.parse(this.getAccessPayload({endpoints: {}})).endpoints;\n            if (endpoints.length) {\n                ea = [];\n                endpoints.forEach((endpoint) => {\n                    ea.push(endpoint.uri);\n                });\n            }\n        }\n\n        if (this.accessTokenPrevious) {\n            const /** @type {?} */ endpoints = JSON.parse(this.getPreviousAccessPayload({endpoints: {}})).endpoints;\n            if (endpoints.length) {\n                endpoints.forEach((endpoint) => {\n                    if (ea.indexOf(endpoint.uri) < 0) {\n                        ea.push(endpoint.uri);\n                    }\n                });\n            }\n        }\n\n        if (options && options.filter && options.filter === 'theBestOne') {\n            if (this.states && Object.keys(this.states).length) {\n                for (let /** @type {?} */ i = 0; (i < ea.length) && (filteredEa.length === 0); i++) {\n                    const /** @type {?} */ endpoint = ea[i];\n                    if (this.states[endpoint] && this\n                            .states[endpoint].state) {\n                        filteredEa.push(endpoint);\n                    }\n                }\n            } else if (ea.length) {\n                filteredEa = [ea[0]];\n            }\n        } else {\n            filteredEa = ea;\n        }\n\n        return filteredEa;\n    };\n/**\n * @param {?=} options\n * @return {?}\n */\ngetDBs(options?): string[] {\n        if (!this.accessToken) {\n            return [];\n        }\n\n        const /** @type {?} */ random = Math.random() % 2;\n        let /** @type {?} */ dbs = JSON.parse(this.getAccessPayload({dbs: []})).dbs || [];\n\n        // need to synchronize db\n        if (random === 0) {\n            dbs = dbs.sort();\n        } else if (random === 1) {\n            dbs = dbs.reverse();\n        }\n\n        let /** @type {?} */ filteredDBs = [];\n        if (options && options.filter && options.filter === 'theBestOne') {\n            if (this.states && Object.keys(this.states).length) {\n                for (let /** @type {?} */ i = 0; (i < dbs.length) && (filteredDBs.length === 0); i++) {\n                    const /** @type {?} */ endpoint = dbs[i];\n                    if (this.states[endpoint].state) {\n                        filteredDBs.push(endpoint);\n                    }\n                }\n            } else if (dbs.length) {\n                filteredDBs = [dbs[0]];\n            }\n        } else {\n            filteredDBs = dbs;\n        }\n\n        return filteredDBs;\n    };\n/**\n * @return {?}\n */\nverifyConnectionStates(): Promise<any> {\n\n        const /** @type {?} */ currentTime = new Date().getTime();\n\n        // todo need verification ? not yet (cache)\n        // if (Object.keys(this.states).length > 0) {\n        //     const time = this.states[Object.keys(this.states)[0]].time;\n        //     if (currentTime < time) {\n        //         return Promise.resolve();\n        //     }\n        // }\n\n        // verify via GET status on Endpoints & DBs\n        const /** @type {?} */ promises = [];\n        this.states = {};\n        this.endpoints = this.getEndpoints();\n        this.endpoints.forEach((endpoint) => {\n            promises.push(new Promise((resolve, reject) => {\n                // console.log(endpoint + '/status?isok=' + this._sdk.version);\n                new connection.Ajax()\n                    .get({\n                        url: endpoint + '/status?isok=' + this._sdk.version,\n                        headers: {'Content-Type': 'application/json', 'Accept': 'text/json'}\n                    })\n                    .then(data => {\n                        let /** @type {?} */ state = false;\n                        if (data && data.isok) {\n                            state = true;\n                        }\n                        this.states[endpoint] = {state: state, time: currentTime};\n                        resolve();\n                    })\n                    .catch(err => {\n                        this.states[endpoint] = {state: false, time: currentTime};\n                        resolve();\n                    });\n            }));\n        });\n\n        const /** @type {?} */ dbs = this.getDBs();\n        dbs.forEach((dbEndpoint) => {\n            promises.push(new Promise((resolve, reject) => {\n                new connection.Ajax()\n                    .get({\n                        url: dbEndpoint,\n                        headers: {'Content-Type': 'application/json', 'Accept': 'text/json'}\n                    })\n                    .then(data => {\n                        this.states[dbEndpoint] = {state: true, time: currentTime};\n                        resolve();\n                    })\n                    .catch(err => {\n                        this.states[dbEndpoint] = {state: false, time: currentTime};\n                        resolve();\n                    });\n            }));\n        });\n        return Promise.all(promises);\n    };\n\n}\n\nfunction Connection_tsickle_Closure_declarations() {\n/** @type {?} */\nConnection.prototype.miappId;\n/** @type {?} */\nConnection.prototype.miappVersion;\n/** @type {?} */\nConnection.prototype.miappCrypto;\n/** @type {?} */\nConnection.prototype._cryptoSalt;\n/** @type {?} */\nConnection.prototype._client;\n/** @type {?} */\nConnection.prototype._user;\n/** @type {?} */\nConnection.prototype.accessToken;\n/** @type {?} */\nConnection.prototype.idToken;\n/** @type {?} */\nConnection.prototype.refreshToken;\n/** @type {?} */\nConnection.prototype.states;\n/** @type {?} */\nConnection.prototype.endpoints;\n/** @type {?} */\nConnection.prototype.accessTokenPrevious;\n/** @type {?} */\nConnection.prototype._sdk;\n/** @type {?} */\nConnection.prototype._storage;\n}\n\n","import {Ajax} from './ajax';\nimport {LocalStorage} from '../tools/storage';\nimport {SdkInterface} from '../sdk/interfaces';\nexport class Client {\npublic clientId: string;\nprivate clientUuid: string;\nprivate clientInfo: string;\nprivate refreshToken: string;\nprivate static refreshCount = 0;\n/**\n * @param {?} appId\n * @param {?} URI\n * @param {?} storage\n * @param {?} sdk\n */\nconstructor(private appId: string,\nprivate URI: string,\nprivate storage: LocalStorage,\nprivate sdk: SdkInterface) {\n\n        let uuid: string = this.storage.get('uuid') || 'uuid-' + Math.random();\n        let info: string = this.storage.get('info');\n        if (!info && window && window.navigator) {\n            info = window.navigator.appName + '@' + window.navigator.appVersion + '-' + window.navigator.userAgent;\n        }\n        if (window && window['device'] && window['device'].uuid) {\n            uuid = window['device'].uuid;\n        }\n        this.setClientUuid(uuid);\n        this.setClientInfo(info);\n        this.refreshToken = this.storage.get('refreshToken');\n        this.clientId = this.storage.get('clientId');\n    };\n/**\n * @param {?} value\n * @return {?}\n */\npublic setClientId(value: string) {\n        this.clientId = value;\n        this.storage.set('clientId', this.clientId);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic setClientUuid(value: string) {\n        this.clientUuid = value;\n        this.storage.set('clientUuid', this.clientUuid);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic setClientInfo(value: string) {\n        this.clientInfo = value;\n        // this.storage.set('clientInfo', this.clientInfo);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic setRefreshToken(value: string) {\n        this.refreshToken = value;\n        this.storage.set('refreshToken', this.refreshToken);\n    }\n/**\n * @param {?} login\n * @param {?} password\n * @param {?=} updateProperties\n * @return {?}\n */\npublic login(login: string, password: string, updateProperties?: any): Promise<any> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, msg: 'no api uri'});\n        }\n\n        const /** @type {?} */ urlLogin = this.URI + '/users';\n        const /** @type {?} */ dataLogin = {\n            name: login,\n            username: login,\n            email: login,\n            password: password\n        };\n\n        return new Ajax()\n            .post({\n                url: urlLogin,\n                data: dataLogin,\n                headers: {'Content-Type': 'application/json', 'Accept': 'text/json'}\n            })\n            .then(createdUser => {\n\n                this.setClientId(createdUser._id);\n                const /** @type {?} */ urlToken = this.URI + '/oauth/token';\n                const /** @type {?} */ dataToken = {\n                    grant_type: 'client_credentials',\n                    client_id: this.clientId,\n                    client_secret: password,\n                    client_udid: this.clientUuid,\n                    client_info: this.clientInfo,\n                    audience: this.appId,\n                    scope: JSON.stringify(this.sdk)\n                };\n                return new Ajax()\n                    .post({\n                        url: urlToken,\n                        data: dataToken,\n                        headers: {'Content-Type': 'application/json', 'Accept': 'text/json'}\n                    });\n            });\n    }\n/**\n * @return {?}\n */\npublic reAuthenticate(): Promise<any> {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, msg: 'no api uri'});\n        }\n        const /** @type {?} */ url = this.URI + '/oauth/token';\n        const /** @type {?} */ data = {\n            grant_type: 'refresh_token',\n            client_id: this.clientId,\n            client_udid: this.clientUuid,\n            client_info: this.clientInfo,\n            audience: this.appId,\n            scope: JSON.stringify(this.sdk),\n            refresh_token: this.refreshToken,\n            refresh_extra: Client.refreshCount++,\n        };\n        return new Ajax()\n            .post({\n                url: url,\n                data: data,\n                headers: {'Content-Type': 'application/json', 'Accept': 'text/json'}\n            });\n    }\n/**\n * @return {?}\n */\npublic logout() {\n\n        if (!this.URI) {\n            console.error('no api uri');\n            return Promise.reject({code: 408, msg: 'no api uri'});\n        }\n\n        const /** @type {?} */ url = this.URI + '/oauth/revoke';\n\n        if (!this.refreshToken || !this.clientId) {\n            return Promise.resolve();\n        }\n\n        const /** @type {?} */ data = {\n            token: this.refreshToken,\n            client_id: this.clientId,\n            client_udid: this.clientUuid,\n            client_info: this.clientInfo,\n            audience: this.appId,\n            scope: JSON.stringify(this.sdk)\n        };\n\n        this.setRefreshToken(null);\n        Client.refreshCount = 0;\n\n        return new Ajax()\n            .post({\n                url: url,\n                data: data,\n                headers: {'Content-Type': 'application/json', 'Accept': 'text/json'}\n            });\n    }\n/**\n * @return {?}\n */\npublic isReady(): boolean {\n        return !!this.URI;\n    }\n}\n\nfunction Client_tsickle_Closure_declarations() {\n/** @type {?} */\nClient.refreshCount;\n/** @type {?} */\nClient.prototype.clientId;\n/** @type {?} */\nClient.prototype.clientUuid;\n/** @type {?} */\nClient.prototype.clientInfo;\n/** @type {?} */\nClient.prototype.refreshToken;\n/** @type {?} */\nClient.prototype.appId;\n/** @type {?} */\nClient.prototype.URI;\n/** @type {?} */\nClient.prototype.storage;\n/** @type {?} */\nClient.prototype.sdk;\n}\n\n","import {XHRPromise} from './xhrpromise';\n\nexport interface XhrOptionsInterface {\n    url: string,\n    data?: any,\n    headers?: any,\n    async?: boolean,\n    username?: string,\n    password?: string,\n    withCredentials?: boolean\n}\nexport class Ajax {\nprivate xhr: XHRPromise;\nconstructor() {\n        this.xhr = new XHRPromise();\n    };\n/**\n * @param {?} args\n * @return {?}\n */\npublic post(args: XhrOptionsInterface): Promise<any> {\n\n        const /** @type {?} */ opt: any = {\n            method: 'POST',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n\n        return this.xhr\n            .send(opt)\n            .then(res => {\n                // console.log('res:', res);\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    res.reason = 'status';\n                    return Promise.reject(res);\n                }\n                return Promise.resolve(res.responseText);\n            });\n    }\n/**\n * @param {?} args\n * @return {?}\n */\npublic put(args: XhrOptionsInterface): Promise<any> {\n        const /** @type {?} */ opt: any = {\n            method: 'PUT',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .send(opt)\n            .then(res => {\n                // console.log('res:', res);\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    res.reason = 'status';\n                    return Promise.reject(res);\n                }\n                return Promise.resolve(res.responseText);\n            });\n    }\n/**\n * @param {?} args\n * @return {?}\n */\npublic delete(args: XhrOptionsInterface): Promise<any> {\n        const /** @type {?} */ opt: any = {\n            method: 'DELETE',\n            url: args.url,\n            data: JSON.stringify(args.data)\n        };\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        return this.xhr\n            .send(opt)\n            .then(res => {\n                // console.log('res:', res);\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    res.reason = 'status';\n                    return Promise.reject(res);\n                }\n                return Promise.resolve(res.responseText);\n            });\n    }\n/**\n * @param {?} args\n * @return {?}\n */\npublic get(args: XhrOptionsInterface): Promise<any> {\n        const /** @type {?} */ opt: any = {\n            method: 'GET',\n            url: args.url\n        };\n        if (args.data) {\n            opt.data = args.data;\n        }\n        if (args.headers) {\n            opt.headers = args.headers;\n        }\n        // console.log('send:', opt);\n        return this.xhr\n            .send(opt)\n            .then(res => {\n                // console.log('res:', res);\n                if (res.status &&\n                    (parseInt(res.status, 10) < 200 || parseInt(res.status, 10) >= 300)) {\n                    res.reason = 'status';\n                    return Promise.reject(res);\n                }\n                return Promise.resolve(res.responseText);\n            });\n    }\n}\n\nfunction Ajax_tsickle_Closure_declarations() {\n/** @type {?} */\nAjax.prototype.xhr;\n}\n\n","\nexport class XHRPromise {\npublic DEFAULT_CONTENT_TYPE = 'application/x-www-form-urlencoded; charset=UTF-8';\nprivate _xhr;\nprivate _unloadHandler: any;\nconstructor() {};\n/**\n * @param {?} options\n * @return {?}\n */\nsend(options): Promise<any> {\n        let /** @type {?} */ defaults;\n        if (options == null) {\n            options = {};\n        }\n        defaults = {\n            method: 'GET',\n            data: null,\n            headers: {},\n            async: true,\n            username: null,\n            password: null,\n            withCredentials: false\n        };\n        options = Object.assign({}, defaults, options);\n        return new Promise((function (_this: XHRPromise) {\n            return function (resolve, reject) {\n                let /** @type {?} */ e, /** @type {?} */ header, /** @type {?} */ ref, /** @type {?} */ value, /** @type {?} */ xhr;\n                if (!XMLHttpRequest) {\n                    _this._handleError('browser', reject, null, 'browser doesn\\'t support XMLHttpRequest');\n                    return;\n                }\n                if (typeof options.url !== 'string' || options.url.length === 0) {\n                    _this._handleError('url', reject, null, 'URL is a required parameter');\n                    return;\n                }\n                _this._xhr = xhr = new XMLHttpRequest;\n                xhr.onload = function () {\n                    let /** @type {?} */ responseText;\n                    _this._detachWindowUnload();\n                    try {\n                        responseText = _this._getResponseText();\n                    } catch ( /** @type {?} */_error) {\n                        _this._handleError('parse', reject, null, 'invalid JSON response');\n                        return;\n                    }\n                    return resolve({\n                        url: _this._getResponseUrl(),\n                        status: xhr.status,\n                        statusText: xhr.statusText,\n                        responseText: responseText,\n                        headers: _this._getHeaders(),\n                        xhr: xhr\n                    });\n                };\n                xhr.onerror = function () {\n                    return _this._handleError('error', reject);\n                };\n                xhr.ontimeout = function () {\n                    return _this._handleError('timeout', reject);\n                };\n                xhr.onabort = function () {\n                    return _this._handleError('abort', reject);\n                };\n                _this._attachWindowUnload();\n                xhr.open(options.method, options.url, options.async, options.username, options.password);\n                if (options.withCredentials) {\n                    xhr.withCredentials = true;\n                }\n                if ((options.data != null) && !options.headers['Content-Type']) {\n                    options.headers['Content-Type'] = _this.DEFAULT_CONTENT_TYPE;\n                }\n                ref = options.headers;\n                for (header in ref) {\n                    if (ref.hasOwnProperty(header)) {\n                        value = ref[header];\n                        xhr.setRequestHeader(header, value);\n                    }\n                }\n                try {\n                    return xhr.send(options.data);\n                } catch ( /** @type {?} */_error) {\n                    e = _error;\n                    return _this._handleError('send', reject, null, e.toString());\n                }\n            };\n        })(this));\n    };\n/**\n * @return {?}\n */\ngetXHR() {\n        return this._xhr;\n    };\n/**\n * @return {?}\n */\nprivate _attachWindowUnload() {\n        this._unloadHandler = this._handleWindowUnload.bind(this);\n        if (( /** @type {?} */((window as any))).attachEvent) {\n            return ( /** @type {?} */((window as any))).attachEvent('onunload', this._unloadHandler);\n        }\n    };\n/**\n * @return {?}\n */\nprivate _detachWindowUnload() {\n        if (( /** @type {?} */((window as any))).detachEvent) {\n            return ( /** @type {?} */((window as any))).detachEvent('onunload', this._unloadHandler);\n        }\n    };\n/**\n * @return {?}\n */\nprivate _getHeaders() {\n        return this._parseHeaders(this._xhr.getAllResponseHeaders());\n    };\n/**\n * @return {?}\n */\nprivate _getResponseText() {\n        let /** @type {?} */ responseText;\n        responseText = typeof this._xhr.responseText === 'string' ? this._xhr.responseText : '';\n        switch ((this._xhr.getResponseHeader('Content-Type') || '').split(';')[0]) {\n            case 'application/json':\n            case 'text/javascript':\n                responseText = JSON.parse(responseText + '');\n        }\n        return responseText;\n    };\n/**\n * @return {?}\n */\nprivate _getResponseUrl() {\n        if (this._xhr.responseURL != null) {\n            return this._xhr.responseURL;\n        }\n        if (/^X-Request-URL:/m.test(this._xhr.getAllResponseHeaders())) {\n            return this._xhr.getResponseHeader('X-Request-URL');\n        }\n        return '';\n    };\n/**\n * @param {?} reason\n * @param {?} reject\n * @param {?=} status\n * @param {?=} statusText\n * @return {?}\n */\nprivate _handleError(reason, reject, status?, statusText?) {\n        this._detachWindowUnload();\n        return reject({\n            reason: reason,\n            status: status || this._xhr.status,\n            statusText: statusText || this._xhr.statusText,\n            xhr: this._xhr\n        });\n    };\n/**\n * @return {?}\n */\nprivate _handleWindowUnload() {\n        return this._xhr.abort();\n    };\n/**\n * @param {?} str\n * @return {?}\n */\nprivate trim(str) {\n        return str.replace(/^\\s*|\\s*$/g, '');\n    }\n/**\n * @param {?} arg\n * @return {?}\n */\nprivate isArray(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n/**\n * @param {?} list\n * @param {?} iterator\n * @return {?}\n */\nprivate forEach(list, iterator) {\n        if (toString.call(list) === '[object Array]') {\n            this.forEachArray(list, iterator, this)\n        } else if (typeof list === 'string') {\n            this.forEachString(list, iterator, this)\n        } else {\n            this.forEachObject(list, iterator, this)\n        }\n    }\n/**\n * @param {?} array\n * @param {?} iterator\n * @param {?} context\n * @return {?}\n */\nprivate forEachArray(array, iterator, context) {\n        for (let /** @type {?} */ i = 0, /** @type {?} */ len = array.length; i < len; i++) {\n            if (array.hasOwnProperty(i)) {\n                iterator.call(context, array[i], i, array)\n            }\n        }\n    }\n/**\n * @param {?} string\n * @param {?} iterator\n * @param {?} context\n * @return {?}\n */\nprivate forEachString(string, iterator, context) {\n        for (let /** @type {?} */ i = 0, /** @type {?} */ len = string.length; i < len; i++) {\n            // no such thing as a sparse string.\n            iterator.call(context, string.charAt(i), i, string)\n        }\n    }\n/**\n * @param {?} object\n * @param {?} iterator\n * @param {?} context\n * @return {?}\n */\nprivate forEachObject(object, iterator, context) {\n        for (const /** @type {?} */ k in object) {\n            if (object.hasOwnProperty(k)) {\n                iterator.call(context, object[k], k, object)\n            }\n        }\n    }\n/**\n * @param {?} headers\n * @return {?}\n */\nprivate _parseHeaders(headers) {\n        if (!headers) {\n            return {};\n        }\n\n        const /** @type {?} */ result = {};\n\n        this.forEach(\n            this.trim(headers).split('\\n')\n            , (row) => {\n                const /** @type {?} */ index = row.indexOf(':')\n                    , /** @type {?} */ key = this.trim(row.slice(0, index)).toLowerCase()\n                    , /** @type {?} */ value = this.trim(row.slice(index + 1));\n\n                if (typeof(result[key]) === 'undefined') {\n                    result[key] = value\n                } else if (this.isArray(result[key])) {\n                    result[key].push(value)\n                } else {\n                    result[key] = [result[key], value]\n                }\n            }\n        );\n\n        return result;\n    }\n\n\n}\n\nfunction XHRPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nXHRPromise.prototype.DEFAULT_CONTENT_TYPE;\n/** @type {?} */\nXHRPromise.prototype._xhr;\n/** @type {?} */\nXHRPromise.prototype._unloadHandler;\n}\n\n","import {Base64} from './base64';\nexport class Xor {\nconstructor() {\n    };\n/**\n * @param {?} value\n * @param {?} key\n * @return {?}\n */\npublic static encrypt(value: string, key: string): string {\n\n        let /** @type {?} */ result = '';\n        for (let /** @type {?} */ i = 0; i < value.length; i++) {\n            result += String.fromCharCode(( /** @type {?} */((value[i].charCodeAt(0).toString(10) as any))) ^ Xor.keyCharAt(key, i));\n        }\n        return Base64.encode(result);\n    };\n/**\n * @param {?} value\n * @param {?} key\n * @return {?}\n */\npublic static decrypt(value: string, key: string): string {\n        let /** @type {?} */ result = '';\n        value = Base64.decode(value);\n        for (let /** @type {?} */ i = 0; i < value.length; i++) {\n            result += String.fromCharCode(( /** @type {?} */((value[i].charCodeAt(0).toString(10) as any))) ^ Xor.keyCharAt(key, i));\n        }\n        return result;\n    }\n/**\n * @param {?} key\n * @param {?} i\n * @return {?}\n */\npublic static keyCharAt(key, i) {\n        return key[Math.floor(i % key.length)].charCodeAt(0).toString(10);\n    }\n\n\n}\n","\n/**\n * localStorage class factory\n * Usage : var LocalStorage = miapp.LocalStorageFactory(window.localStorage); // to create a new class\n * Usage : var localStorageService = new LocalStorage(); // to create a new instance\n */\nexport class LocalStorage {\npublic version = '0.1';\nprivate storage;\n/**\n * @param {?} storageService\n * @param {?} storageKey\n */\nconstructor(storageService,\nprivate storageKey) {\n        this.storage = storageService || window.localStorage;\n        if (!this.storage) {\n            throw new Error('miapp.LocalStorageFactory needs a storageService!');\n        }\n        /* todo huge refacto\n                    if (!miapp.Xml) {\n                        throw new Error('miapp.Xml needs to be loaded before miapp.LocalStorage!');\n                    }\n                    if (!miapp.Json) {\n                        throw new Error('miapp.Json needs to be loaded before miapp.LocalStorage!');\n                    }\n                    if (!miapp.Xml.isXml || !miapp.Xml.xml2String || !miapp.Xml.string2Xml) {\n                        throw new Error('miapp.Xml with isXml(), xml2String() and string2Xml() needs to be loaded before miapp.LocalStorage!');\n                    }\n                    if (!miapp.Json.object2String || !miapp.Json.string2Object) {\n                        throw new Error('miapp.Json with object2String() and string2Object() needs to be loaded before miapp.LocalStorage!');\n                    }\n                    */\n    }\n/**\n * Sets a key's value.\n * \n *              a string an exception is raised.\n *              compatible (Numbers, Strings, Objects etc.).\n * @param {?} key\n * @param {?} value\n * @return {?} the stored value which is a container of user value.\n */\nset(key, value) {\n\n        key = this.storageKey + key;\n        this.checkKey(key);\n        // clone the object before saving to storage\n        const /** @type {?} */ t = typeof(value);\n        if (t === 'undefined') {\n            value = 'null';\n        } else if (value === null) {\n            value = 'null';\n        } else if (t === 'string') {\n            value = JSON.stringify({string: value})\n        } else if (t === 'number') {\n            value = JSON.stringify({number: value});\n        } else if (t === 'boolean') {\n            value = JSON.stringify({bool: value});\n        } else if (t === 'object') {\n            value = JSON.stringify({json: value});\n        } else {\n            // reject and do not insert\n            // if (typeof value == \"function\") for example\n            throw new TypeError('Value type ' + t + ' is invalid. It must be null, undefined, xml, string, number, boolean or object');\n        }\n        this.storage.setItem(key, value);\n        return value;\n    };\n/**\n * Looks up a key in cache\n * \n * @param {?} key\n * @param {?=} def\n * @return {?} the key value, default value or <null>\n */\nget(key, def?) {\n        key = this.storageKey + key;\n        this.checkKey(key);\n        const /** @type {?} */ item = this.storage.getItem(key);\n        if (item !== null) {\n            if (item === 'null') {\n                return null;\n            }\n            const /** @type {?} */ value = JSON.parse(item);\n            /* todo\n            var value = miapp.Json.string2Object(item);\n            if ('xml' in value) {\n                return miapp.Xml.string2Xml(value.xml);\n            } else  */\n            if ('string' in value) {\n                return value.string;\n            } else if ('number' in value) {\n                return value.number.valueOf();\n            } else if ('bool' in value) {\n                return value.bool.valueOf();\n            } else {\n                return value.json;\n            }\n        }\n        return !def ? null : def;\n    };\n/**\n * Deletes a key from cache.\n * \n * @param {?} key\n * @return {?} true if key existed or false if it didn't\n */\nremove(key) {\n        key = this.storageKey + key;\n        this.checkKey(key);\n        const /** @type {?} */ existed = (this.storage.getItem(key) !== null);\n        this.storage.removeItem(key);\n        return existed;\n    };\n/**\n * Deletes everything in cache.\n * \n * @return {?} true\n */\nclear() {\n        const /** @type {?} */ existed = (this.storage.length > 0);\n        this.storage.clear();\n        return existed;\n    };\n/**\n * How much space in bytes does the storage take?\n * \n * @return {?} Number\n */\nsize() {\n        return this.storage.length;\n    };\n/**\n * Call function f on the specified context for each element of the storage\n * from index 0 to index length-1.\n * WARNING : You should not modify the storage during the loop !!!\n * \n * @param {?} f\n * @param {?} context\n * @return {?} Number of items in storage\n */\nforeach(f, context) {\n        const /** @type {?} */ n = this.storage.length;\n        for (let /** @type {?} */ i = 0; i < n; i++) {\n            const /** @type {?} */ key = this.storage.key(i);\n            const /** @type {?} */ value = this.get(key);\n            if (context) {\n                // f is an instance method on instance context\n                f.call(context, value);\n            } else {\n                // f is a function or class method\n                f(value);\n            }\n        }\n        return n;\n    };\n/**\n * @param {?} key\n * @return {?}\n */\nprivate checkKey(key) {\n        if (!key || (typeof key !== 'string')) {\n            throw new TypeError('Key type must be string');\n        }\n        return true;\n    }\n}\n\nfunction LocalStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalStorage.prototype.version;\n/** @type {?} */\nLocalStorage.prototype.storage;\n/** @type {?} */\nLocalStorage.prototype.storageKey;\n}\n\n","\nexport class Base64 {\nconstructor() {\n    };\n/**\n * Decodes string from Base64 string\n * @param {?} input\n * @return {?}\n */\npublic static encode(input: string): string {\n\n        if (!input) { return null; }\n\n        return btoa(encodeURIComponent(input).replace(/%([0-9A-F]{2})/g,\n            function toSolidBytes(match, p1) {\n                return String.fromCharCode(parseInt('0x' + p1, 16));\n            }));\n\n    }\n/**\n * @param {?} input\n * @return {?}\n */\npublic static decode(input: string): string {\n\n        if (!input) { return null; }\n\n        return decodeURIComponent(atob(input).split('').map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n\n    }\n}\n","// bumped version via gulp\nexport const /** @type {?} */ version = '2.0.19';\n"],"names":["tools.Base64","connection.Client","connection.Connection","session.Session","tools.LocalStorage","version.version","connection.Ajax","tools.Xor"],"mappings":"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"}
